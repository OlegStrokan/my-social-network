{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","dialog","message","DialogItem","active","to","id","name","Textarea","FormControl","maxLength50","maxLengthCreator","minLength2","minLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messageElements","messages","m","dialogsItems","wrapper","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,QAAU,2B,8FCUvOC,EARC,SAACC,GACb,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACKH,EAAMI,W,QCMJC,EARI,SAACL,GAChB,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEI,OAAnC,SACI,cAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAjC,SAAsCR,EAAMS,U,iCCClDC,EAAWC,YAAY,YA+BzBC,EAAcC,YAAiB,IAC/BC,EAAaC,YAAiB,GAa5BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXL,SAACjB,GACpB,OAAQ,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACJ,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWZ,EAAUa,SAAU,CAACC,IAAUZ,EAAaE,GAAaL,KAAK,iBAAiBgB,YAAY,yBAEjH,8BACI,kDAOGC,EA5CC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBD,GAAIwB,EAAExB,IAAZwB,EAAExB,OAC5EyB,EAAkBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OAAQ,cAAC,EAAD,CAAS/B,QAAS+B,EAAE/B,SAAc+B,EAAE3B,OAOrF,OACI,sBAAKP,UAAWC,IAAE4B,QAAlB,UACI,qBAAK7B,UAAWC,IAAEkC,aAAlB,SAEKP,IAEL,sBAAK5B,UAAWC,IAAEgC,SAAlB,UAEI,qBAAKjC,UAAWC,IAAEE,QAAlB,SAA4B6B,IAC5B,qBAAKhC,UAAWC,IAAEmC,QAAlB,SACI,cAACrB,EAAD,CAAqBG,SAdjB,SAACmB,GACjBtC,EAAMuC,YAAYD,EAAOE,4B,uDCf7BC,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,S,OCiBRE,sBACXC,aAfkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDTR,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAA0B,IAAtBC,KAAKlD,MAAM0C,OAAyB,cAAC,IAAD,CAAUnC,GAAI,WAC/C,cAACyC,EAAD,eAAeE,KAAKlD,YAJQ,GACXmD,IAAMH,WAQtC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCO9DL,CAGblB","file":"static/js/4.0e2b9dbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"wrapper\":\"Dialogs_wrapper__1cRA8\"};","import s from \"../Dialogs.module.css\";\nimport React from \"react\";\n\nconst Message = (props) => {\n    return (\n        <div className={s.dialog}>\n            {props.message}\n        </div>\n    )\n}\n\nexport default Message","import s from \"./../Dialogs.module.css\";\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem","import React from \"react\"\nimport s from './Dialogs.module.css';\nimport Message from './Message/Message'\nimport DialogItem from './DialogItem/DialogItem'\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\"\nimport {FormControl} from '../../components/common/FormsControl/FormsControl'\nconst Textarea = FormControl(\"textarea\")\n\n// данные с сервера\nconst Dialogs = (props) => {\n    let state = props.dialogsPage\n    //  получаем jsx элементы\n    let dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>)\n    let messageElements = state.messages.map((m) =>  <Message message={m.message} key={m.id}/>)\n\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {/*----------отрисовываем jsx элементы----------*/}\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {/*- ---------отрисовываем jsx элементы----------*/}\n                <div className={s.message}>{messageElements}</div>\n                <div className={s.wrapper}>\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nlet maxLength50 = maxLengthCreator(50)\nlet minLength2 = minLengthCreator(2)\n\nconst AddMessageForm = (props) => {\n    return  <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={Textarea} validate={[required, maxLength50, minLength2]} name=\"newMessageBody\" placeholder=\"Enter your message\"/>\n        </div>\n        <div>\n            <button>Send</button>\n        </div>\n    </form>\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs","import {Redirect} from \"react-router-dom\"\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth === false) return <Redirect to={'/login'}/>\n            return <Component {...this.props}/>\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","import React from \"react\"\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n// превратить часть стейта в пропсы\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n// коллбеки, которые будут отправлены в презентационную компоненту\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n"],"sourceRoot":""}